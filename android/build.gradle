apply plugin: "com.android.library"

configurations { natives }

dependencies {
    api project(':core')
    api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
//    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
//    implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
//    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi"
//    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
//    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
//    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
//    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"
    implementation "com.badlogicgames.gdx-controllers:gdx-controllers-android:$gdxControllersVersion"

    api "com.google.android.gms:play-services-games:23.1.0"
    api 'com.google.android.gms:play-services-auth:21.0.0'
}
android {
    compileSdk 31
    namespace 'me.retrodaredevil.game.trackshooter.common'
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
//            java.srcDirs = ['src']
//            aidl.srcDirs = ['src']
//            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
//            assets.srcDirs = ['assets'] // this is commented out so we use the default assets location
            jniLibs.srcDirs = ['libs']
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 34 // TODO put this in a variable somewhere
    }
    buildFeatures {
        renderScript true
        aidl true
    }
}


// called every time gradle gets executed, takes the native dependencies of
// the natives configuration, and extracts them to the proper libs/ folders
// so they get packed with the APK.
task copyAndroidNatives() {
    // thanks https://github.com/collinsmith/riiablo/blob/4eba03fc1c63dd76759a385a642dd484852bde9e/android/build.gradle#LL69C14-L69C14
    //file("libs/armeabi/").mkdirs()
    file("libs/armeabi-v7a/").mkdirs()
    file("libs/arm64-v8a/").mkdirs()
    file("libs/x86_64/").mkdirs()
    file("libs/x86/").mkdirs()

    configurations.natives.files.each { jar ->
        def outputDir = null
        if (jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("libs/arm64-v8a")
        if (jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
        //if (jar.name.endsWith("natives-armeabi.jar")) outputDir = file("libs/armeabi")
        if (jar.name.endsWith("natives-x86_64.jar")) outputDir = file("libs/x86_64")
        if (jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
        if (outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.so"
            }
        }
    }
}

